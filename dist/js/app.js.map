{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/vanilla-text-mask/dist/vanillaTextMask.js","src/js/circleText.js","src/js/index.js","src/js/phoneNumber.js","src/js/textAnimationWithOpacity.js","src/js/videoControl.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","this","__esModule","default","target","value","update","inputElement","addEventListener","textMaskInputElement","destroy","removeEventListener","Object","defineProperty","conformToMask","maskInput","enumerable","get","placeholderChar","strFunction","Symbol","iterator","constructor","prototype","arguments","l","isArray","processCaretTraps","maskWithoutCaretTraps","s","guide","d","previousConformedValue","h","v","placeholder","convertMaskToPlaceholder","m","currentCaretPosition","y","keepCharPositions","g","b","C","k","x","P","T","O","M","Math","abs","w","S","slice","_","split","map","char","isNew","j","V","splice","E","N","F","I","L","shift","R","J","test","W","q","z","B","substr","D","G","conformedValue","meta","someCharsRejected","Array","indexOf","JSON","stringify","RegExp","join","isString","String","isNumber","isNaN","push","indexes","previousPlaceholder","rawValue","indexesOfPipedChars","caretTrapIndexes","toLowerCase","A","filter","H","K","Q","assign","hasOwnProperty","state","mask","pipe","showMask","selectionEnd","rejected","document","activeElement","setSelectionRange","navigator","userAgent","requestAnimationFrame","setTimeout","id","loaded","define","amd","vanillaTextMask","collection","getElementsByClassName","correctionForSymbols","А","В","Е","Ж","И","Н","О","П","У","Ы","Ь","Я","makeCircleText","let","collectionElementText","outerText","toUpperCase","rotation","innerHTML","symbol","index","phoneInput","querySelector","h1_1","h1_1Arr","textContent","addSpanToAllSymbols","intervalFirstLine","setInterval","undefined","clearInterval","console","log","classList","add","textBlock","text","playButton","video","play","pause","style","opacity"],"mappings":"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","file":"app.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","!function(e,r){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=r():\"function\"==typeof define&&define.amd?define([],r):\"object\"==typeof exports?exports.vanillaTextMask=r():e.vanillaTextMask=r()}(this,function(){return function(e){function r(n){if(t[n])return t[n].exports;var o=t[n]={exports:{},id:n,loaded:!1};return e[n].call(o.exports,o,o.exports,r),o.loaded=!0,o.exports}var t={};return r.m=e,r.c=t,r.p=\"\",r(0)}([function(e,r,t){\"use strict\";function n(e){return e&&e.__esModule?e:{default:e}}function o(e){var r=e.inputElement,t=(0,u.default)(e),n=function(e){var r=e.target.value;return t.update(r)};return r.addEventListener(\"input\",n),t.update(r.value),{textMaskInputElement:t,destroy:function(){r.removeEventListener(\"input\",n)}}}Object.defineProperty(r,\"__esModule\",{value:!0}),r.conformToMask=void 0,r.maskInput=o;var i=t(2);Object.defineProperty(r,\"conformToMask\",{enumerable:!0,get:function(){return n(i).default}});var a=t(5),u=n(a);r.default=o},function(e,r){\"use strict\";Object.defineProperty(r,\"__esModule\",{value:!0}),r.placeholderChar=\"_\",r.strFunction=\"function\"},function(e,r,t){\"use strict\";function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:l,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:u,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!(0,i.isArray)(r)){if((\"undefined\"==typeof r?\"undefined\":o(r))!==a.strFunction)throw new Error(\"Text-mask:conformToMask; The mask property must be an array.\");r=r(e,t),r=(0,i.processCaretTraps)(r).maskWithoutCaretTraps}var n=t.guide,s=void 0===n||n,f=t.previousConformedValue,d=void 0===f?l:f,c=t.placeholderChar,p=void 0===c?a.placeholderChar:c,v=t.placeholder,h=void 0===v?(0,i.convertMaskToPlaceholder)(r,p):v,m=t.currentCaretPosition,y=t.keepCharPositions,g=s===!1&&void 0!==d,b=e.length,C=d.length,k=h.length,x=r.length,P=b-C,T=P>0,O=m+(T?-P:0),M=O+Math.abs(P);if(y===!0&&!T){for(var w=l,S=O;S<M;S++)h[S]===p&&(w+=p);e=e.slice(0,O)+w+e.slice(O,b)}for(var _=e.split(l).map(function(e,r){return{char:e,isNew:r>=O&&r<M}}),j=b-1;j>=0;j--){var V=_[j].char;if(V!==p){var A=j>=O&&C===x;V===h[A?j-P:j]&&_.splice(j,1)}}var E=l,N=!1;e:for(var F=0;F<k;F++){var I=h[F];if(I===p){if(_.length>0)for(;_.length>0;){var L=_.shift(),R=L.char,J=L.isNew;if(R===p&&g!==!0){E+=p;continue e}if(r[F].test(R)){if(y===!0&&J!==!1&&d!==l&&s!==!1&&T){for(var W=_.length,q=null,z=0;z<W;z++){var B=_[z];if(B.char!==p&&B.isNew===!1)break;if(B.char===p){q=z;break}}null!==q?(E+=R,_.splice(q,1)):F--}else E+=R;continue e}N=!0}g===!1&&(E+=h.substr(F,k));break}E+=I}if(g&&T===!1){for(var D=null,G=0;G<E.length;G++)h[G]===p&&(D=G);E=null!==D?E.substr(0,D+1):l}return{conformedValue:E,meta:{someCharsRejected:N}}}Object.defineProperty(r,\"__esModule\",{value:!0});var o=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e};r.default=n;var i=t(3),a=t(1),u=[],l=\"\"},function(e,r,t){\"use strict\";function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:s,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:l.placeholderChar;if(!o(e))throw new Error(\"Text-mask:convertMaskToPlaceholder; The mask property must be an array.\");if(e.indexOf(r)!==-1)throw new Error(\"Placeholder character must not be used as part of the mask. Please specify a character that is not present in your mask as your placeholder character.\\n\\n\"+(\"The placeholder character that was received is: \"+JSON.stringify(r)+\"\\n\\n\")+(\"The mask that was received is: \"+JSON.stringify(e)));return e.map(function(e){return e instanceof RegExp?r:e}).join(\"\")}function o(e){return Array.isArray&&Array.isArray(e)||e instanceof Array}function i(e){return\"string\"==typeof e||e instanceof String}function a(e){return\"number\"==typeof e&&void 0===e.length&&!isNaN(e)}function u(e){for(var r=[],t=void 0;t=e.indexOf(f),t!==-1;)r.push(t),e.splice(t,1);return{maskWithoutCaretTraps:e,indexes:r}}Object.defineProperty(r,\"__esModule\",{value:!0}),r.convertMaskToPlaceholder=n,r.isArray=o,r.isString=i,r.isNumber=a,r.processCaretTraps=u;var l=t(1),s=[],f=\"[]\"},function(e,r){\"use strict\";function t(e){var r=e.previousConformedValue,t=void 0===r?o:r,i=e.previousPlaceholder,a=void 0===i?o:i,u=e.currentCaretPosition,l=void 0===u?0:u,s=e.conformedValue,f=e.rawValue,d=e.placeholderChar,c=e.placeholder,p=e.indexesOfPipedChars,v=void 0===p?n:p,h=e.caretTrapIndexes,m=void 0===h?n:h;if(0===l||!f.length)return 0;var y=f.length,g=t.length,b=c.length,C=s.length,k=y-g,x=k>0,P=0===g,T=k>1&&!x&&!P;if(T)return l;var O=x&&(t===s||s===c),M=0,w=void 0,S=void 0;if(O)M=l-k;else{var _=s.toLowerCase(),j=f.toLowerCase(),V=j.substr(0,l).split(o),A=V.filter(function(e){return _.indexOf(e)!==-1});S=A[A.length-1];var E=a.substr(0,A.length).split(o).filter(function(e){return e!==d}).length,N=c.substr(0,A.length).split(o).filter(function(e){return e!==d}).length,F=N!==E,I=void 0!==a[A.length-1]&&void 0!==c[A.length-2]&&a[A.length-1]!==d&&a[A.length-1]!==c[A.length-1]&&a[A.length-1]===c[A.length-2];!x&&(F||I)&&E>0&&c.indexOf(S)>-1&&void 0!==f[l]&&(w=!0,S=f[l]);for(var L=v.map(function(e){return _[e]}),R=L.filter(function(e){return e===S}).length,J=A.filter(function(e){return e===S}).length,W=c.substr(0,c.indexOf(d)).split(o).filter(function(e,r){return e===S&&f[r]!==e}).length,q=W+J+R+(w?1:0),z=0,B=0;B<C;B++){var D=_[B];if(M=B+1,D===S&&z++,z>=q)break}}if(x){for(var G=M,H=M;H<=b;H++)if(c[H]===d&&(G=H),c[H]===d||m.indexOf(H)!==-1||H===b)return G}else if(w){for(var K=M-1;K>=0;K--)if(s[K]===S||m.indexOf(K)!==-1||0===K)return K}else for(var Q=M;Q>=0;Q--)if(c[Q-1]===d||m.indexOf(Q)!==-1||0===Q)return Q}Object.defineProperty(r,\"__esModule\",{value:!0}),r.default=t;var n=[],o=\"\"},function(e,r,t){\"use strict\";function n(e){return e&&e.__esModule?e:{default:e}}function o(e){var r={previousConformedValue:void 0,previousPlaceholder:void 0};return{state:r,update:function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e,o=n.inputElement,s=n.mask,d=n.guide,m=n.pipe,g=n.placeholderChar,b=void 0===g?v.placeholderChar:g,C=n.keepCharPositions,k=void 0!==C&&C,x=n.showMask,P=void 0!==x&&x;if(\"undefined\"==typeof t&&(t=o.value),t!==r.previousConformedValue){(\"undefined\"==typeof s?\"undefined\":l(s))===y&&void 0!==s.pipe&&void 0!==s.mask&&(m=s.pipe,s=s.mask);var T=void 0,O=void 0;if(s instanceof Array&&(T=(0,p.convertMaskToPlaceholder)(s,b)),s!==!1){var M=a(t),w=o.selectionEnd,S=r.previousConformedValue,_=r.previousPlaceholder,j=void 0;if((\"undefined\"==typeof s?\"undefined\":l(s))===v.strFunction){if(O=s(M,{currentCaretPosition:w,previousConformedValue:S,placeholderChar:b}),O===!1)return;var V=(0,p.processCaretTraps)(O),A=V.maskWithoutCaretTraps,E=V.indexes;O=A,j=E,T=(0,p.convertMaskToPlaceholder)(O,b)}else O=s;var N={previousConformedValue:S,guide:d,placeholderChar:b,pipe:m,placeholder:T,currentCaretPosition:w,keepCharPositions:k},F=(0,c.default)(M,O,N),I=F.conformedValue,L=(\"undefined\"==typeof m?\"undefined\":l(m))===v.strFunction,R={};L&&(R=m(I,u({rawValue:M},N)),R===!1?R={value:S,rejected:!0}:(0,p.isString)(R)&&(R={value:R}));var J=L?R.value:I,W=(0,f.default)({previousConformedValue:S,previousPlaceholder:_,conformedValue:J,placeholder:T,rawValue:M,currentCaretPosition:w,placeholderChar:b,indexesOfPipedChars:R.indexesOfPipedChars,caretTrapIndexes:j}),q=J===T&&0===W,z=P?T:h,B=q?z:J;r.previousConformedValue=B,r.previousPlaceholder=T,o.value!==B&&(o.value=B,i(o,W))}}}}}function i(e,r){document.activeElement===e&&(g?b(function(){return e.setSelectionRange(r,r,m)},0):e.setSelectionRange(r,r,m))}function a(e){if((0,p.isString)(e))return e;if((0,p.isNumber)(e))return String(e);if(void 0===e||null===e)return h;throw new Error(\"The 'value' provided to Text Mask needs to be a string or a number. The value received was:\\n\\n \"+JSON.stringify(e))}Object.defineProperty(r,\"__esModule\",{value:!0});var u=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},l=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e};r.default=o;var s=t(4),f=n(s),d=t(2),c=n(d),p=t(3),v=t(1),h=\"\",m=\"none\",y=\"object\",g=\"undefined\"!=typeof navigator&&/Android/i.test(navigator.userAgent),b=\"undefined\"!=typeof requestAnimationFrame?requestAnimationFrame:setTimeout}])});","// забираем все элементы с классом text-for-circle-in-js в одну коллекцию\nconst collection = document.getElementsByClassName(\"text-for-circle-in-js\");\n\n// создаём объект, где лежат коррекции для каждого символа\nconst correctionForSymbols = {\n  А: 0.5,\n  В: 0.5,\n  Е: 1,\n  Ж: -1.8,\n  И: -0.5,\n  Н: -0.5,\n  О: -1,\n  П: 1,\n  У: 1,\n  Ы: -1,\n  Ь: 1,\n  Я: -1,\n};\n\n// передаём всю коллекцию в функцию для поочерёдной обработки\nmakeCircleText(collection);\n\nfunction makeCircleText(collection) {\n  // берём по очереди каждый DOM элемент коллекции text\n  for (let i = 0; i < collection.length; i++) {\n    // забираем весь текст из DOM элемента коллекции и переводим его в верхний регистр\n    const collectionElementText = collection[i].outerText.toUpperCase();\n    // делим полную окружность на количество элементов в строке + 1 пробел\n    const rotation = 360 / (collectionElementText.length + 1);\n\n    // пересобираем текст и добавляем каждому символу координату вдоль окружности плюс коррекцию\n    collection[i].innerHTML = collectionElementText\n      .split(\"\")\n      .map(\n        (symbol, index) =>\n          `<span class=\"circle-text\" style=\"--rot:${\n            index * rotation + (correctionForSymbols[symbol] || 0)\n          }deg\">${symbol}</span>`\n      )\n      .join(\"\");\n  }\n}\n\n// const makeCircleText = (blockClass, text) => {\n//   const rotation = 360 / text.length;\n\n//   document.querySelector(blockClass).innerHTML = text\n//     .split(\"\")\n//     .map(\n//       (symbol, index) =>\n//         `<span class=\"circle-text\" style=\"--rot:${index * rotation\n//         }deg\">${symbol}</span>`\n//     )\n//     .join(\"\");\n// };\n\n// makeCircleText(\n//   \".block4-2-circle1-text\",\n//   \"С В А Д Ь Б Ы    С В А Д Ь Б Ы    С В А Д Ь Б Ы    С В А Д Ь Б Ы    С В А Д Ь Б Ы   \"\n// );\n\n// makeCircleText(\n//   \".block4-2-circle2-text\",\n//   \"В Ы П У С К Н Ы Е   В Ы П У С К Н Ы Е   В Ы П У С К Н Ы Е   В Ы П У С К Н Ы Е   \"\n// );\n\n// makeCircleText(\n//   \".block4-2-circle3-text\",\n//   \"Д Н И  Р О Ж Д Е Н И Я  Д Н И  Р О Ж Д Е Н И Я  Д Н И  Р О Ж Д Е Н И Я   \"\n// );\n\n// document.querySelector(\".block4-2-circle1-text\").innerHTML =\n//   \"С В А Д Ь Б Ы    С В А Д Ь Б Ы    С В А Д Ь Б Ы    С В А Д Ь Б Ы    С В А Д Ь Б Ы\"\n//     .split(\"\")\n//     .map(\n//       (e, i) =>\n//         `<span class=\"circle-text\" style=\"--rot:${i * 4.2}deg\">${e}</span>`\n//     )\n//     .join(\"\");\n\n// document.querySelector(\".block4-2-circle2-text\").innerHTML =\n//   \"В Ы П У С К Н Ы Е   В Ы П У С К Н Ы Е   В Ы П У С К Н Ы Е   В Ы П У С К Н Ы Е\"\n//     .split(\"\")\n//     .map(\n//       (e, i) =>\n//         `<span class=\"circle-text\" style=\"--rot:${i * 4.5}deg\">${e}</span>`\n//     )\n//     .join(\"\");\n\n// document.querySelector(\".block4-2-circle3-text\").innerHTML =\n//   \"ДНИ  РОЖДЕНИЯ  ДНИ  РОЖДЕНИЯ  ДНИ  РОЖДЕНИЯ\"\n//     .split(\"\")\n//     .map(\n//       (e, i) =>\n//         `<span class=\"circle-text\" style=\"--rot:${i * 8}deg\">${e}</span>`\n//     )\n//     .join(\"\");\n","require(\"./circleText\");\nrequire(\"./textAnimationWithOpacity\");\nrequire(\"./phoneNumber\");\nrequire(\"./videoControl\");\n","const vanillaTextMask = require(\"vanilla-text-mask\");\n\nconst phoneMask = [\n  \"+\",\n  \"7\",\n  \" \",\n  \"(\",\n  /[1-9]/,\n  /\\d/,\n  /\\d/,\n  \")\",\n  \" \",\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  \"-\",\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  /\\d/,\n];\n\nconst phoneInput = document.querySelector(\"#phone\");\n\nvanillaTextMask.maskInput({\n  inputElement: phoneInput,\n  mask: phoneMask,\n});\n","const h1_1 = document.querySelector(\".h1_1\");\r\nconst h1_1Arr = h1_1.textContent.split(\"\");\r\n\r\nlet time = 1;\r\nlet i = 0;\r\nlet y = 0;\r\n// let symbol = ''\r\n\r\nh1_1.innerHTML = '';\r\n\r\naddSpanToAllSymbols()\r\nsetTimeout(addClassWithOpacity1, 3000)\r\n\r\nfunction addSpanToAllSymbols() {\r\n    const intervalFirstLine = setInterval(() => {\r\n        if (h1_1Arr[i] !== undefined) {\r\n            h1_1.innerHTML += `<span class=\"opacity-0-styling\" id=\"symbol-${i}\">${h1_1Arr[i]}</span>`;\r\n            i++;\r\n        } else {\r\n            clearInterval(intervalFirstLine);\r\n            i = 0;\r\n        }\r\n    }, time);\r\n}\r\n\r\nfunction addClassWithOpacity1() {\r\n\r\n    for (y = 0; y < h1_1Arr.length; y++) {\r\n        console.log(h1_1.querySelector(`#symbol-${y}`))\r\n        setTimeout(() => {\r\n            h1_1.querySelector(`#symbol-${y}`).classList.add('opacity-1-styling')\r\n        }, 300)\r\n    }\r\n\r\n    // symbol = document.getElementById(`${i}`)\r\n    // symbol.classList.add('opacity-1-styling')\r\n}","const textBlock = document.querySelector(\".text-on-video-div\");\nconst text = document.querySelector(\".text-on-video-p\");\nconst playButton = document.querySelector(\".play-button\")\nconst video = document.querySelector(\".video\");\n\nlet play = false;\n\ntextBlock.addEventListener(\"click\", () => {\n    if (play) {\n        play = false;\n        video.pause();\n        text.style.opacity = \"0.99\";\n        playButton.style.opacity = \"0.5\";\n    } else {\n        play = true;\n        video.play();\n        text.style.opacity = \"0\";\n        playButton.style.opacity = \"0\";\n    }\n});"]}